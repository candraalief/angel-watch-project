[gd_scene load_steps=6 format=3 uid="uid://5p1dht1so4xr"]

[sub_resource type="GDScript" id="GDScript_x228s"]
script/source = "extends ColorRect


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass


func _on_animation_player_animation_finished(anim_name: StringName) -> void:
	pass
"

[sub_resource type="Animation" id="Animation_x228s"]
resource_name = "Fade_In"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 0), Color(0, 0, 0, 1)]
}

[sub_resource type="Animation" id="Animation_jkloa"]
resource_name = "Fade_Out"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 1), Color(0, 0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_2rpar"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0, 0, 0, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_jxiwm"]
_data = {
&"Fade_In": SubResource("Animation_x228s"),
&"Fade_Out": SubResource("Animation_jkloa"),
&"RESET": SubResource("Animation_2rpar")
}

[node name="Fade_Transition" type="ColorRect"]
offset_right = 1327.0
offset_bottom = 770.0
color = Color(0, 0, 0, 0)
script = SubResource("GDScript_x228s")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_jxiwm")
}

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
